# Данный класс реализвует простейший вариант автопилота автомобиля,предназначенный для движения по заданной кривой
"""
Нам даны:
    Кривая, заданная в виде функции f(x). В двльнейшем планируется перейти на сплайн

Идея следующая:
+- Трасса разделена на сегменты
+- Контроллер движения условно состоит из 3 стадий:
    1) Движение вперед. На участках трассы близких к прямым машина движется прямо к целоевой точке
    2) Поворот. На данной стадии происходит поворот машины с минимальным линейным движением
    3)Собственно поворот с движением
Данные стадии зависимы друг от друга. 3=1+2, но при этом 1 и 2 достаточно, но тогда путь модет быть не оптимальным
При правильно подобранных параметрах все три стадии должны дать в итоге оптимальный путь, который и будет браться в качестве baseline
Основная проблема. Ошибка , когда машина модет не находится на трассе. Частично это решает вводи эпсилон-окрестности вокруг активной точки
Машина должна двигаться непрерывно без рывков и прочее.
Нельзя и двигаться постоянно. Нужен контроль скоростию Ввод оптимальной скорости. Подбор силы и времени тромоза, чтобы скорость упала к следующим итерациям  или эе ввод передач
"""


# Если возникнут проблемы https://github.com/microsoft/AirSim/pull/2243
import  numpy as np
class Controller:

    def __init__(self,kProportional,kIntegral=0):
        self._kp= kProportional
        self._ki = kIntegral

    # error -отклонение от трассы
    # Подаем на вход steering, throttle
    # Получем их исправленные значения
    def PIDController(self, steering, throttle, e, de=0):
        # return (e*self._kProportional + 1)*steering
        return 0, throttle + (self._kp*e)
    def getControllerParams(self):
        return self._kProportional

    def setControllerParams(self, value):
        self._kProportional = value
